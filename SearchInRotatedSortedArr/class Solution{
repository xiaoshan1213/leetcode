class Solution{
	public:
		int search(vector<int> &nums, int target){
			int bias=getRot(nums);
			int t=binarySearch(nums,target,bias);
			return nums[t]==target?t:-1;
		}

		int getRot(vector<int> &nums){
			int start=0,end=nums.size()-1;
			while(start<end){
				int mid=(start+end)/2;
				if(nums[mid]>nums[end]) start=mid+1;
				else end=mid;
			}
			return start;
		}

		int binarySearch(vector<int> &nums, int target, int bias){
			int n=nums.size();
			int start=-1,end=n-1;
			while(end-start>1){
				int mid=(start+end)/2;
				if(nums[mid+bias]%n>=target) end=mid;
				else start=mid;
			}
			return (end+bias)%n;
		}
}